import logging
import sqlite3

from telegram.ext import Application, MessageHandler, filters, ConversationHandler
from config import BOT_TOKEN
from telegram.ext import CommandHandler
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove
from random import choice
from datetime import datetime

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)

logger = logging.getLogger(__name__)

reply_keyboard_2 = [['/1', '/2', '/3']]
markup_1 = ReplyKeyboardMarkup(reply_keyboard_2, one_time_keyboard=True)

reply_keyboard_3 = [['/Blue', '/Red', '/Green']]
markup_2 = ReplyKeyboardMarkup(reply_keyboard_3, one_time_keyboard=True)

data = ''
datt = ''
sex = ''
last = ''
chinese_zodiac = ''

Amulets_Fire = ['Fire_1.png', 'Fire_2.png', 'Fire_3.png']
Amulets_Water = ['Water_1.png', 'Water_2.png', 'Water_3.png']
Amulets_Ground = ['Ground_1.png', 'Ground_2.png', 'Ground_3.png']
Amulets_Wind = ['Wind_1.png', 'Wind_2.png', 'Wind_3.png']

con = sqlite3.connect('Gadalka.db')

cur = con.cursor()


async def start_command(update, context):
    global sex, last, datt

    rezult0 = cur.execute(f"""SELECT user FROM Users""").fetchall()
    if str(update.message.from_user.first_name) + ' ' + str(update.message.from_user.last_name) in rezult0[0]:
        datt = str(datetime.now())[:-7]
        result1 = cur.execute(f"""INSERT INTO Users(user,data) VALUES('{str(update.message.from_user.first_name)
                                                                        + ' ' + str(update.message.from_user.last_name)}', '{datt}')""").fetchall()
        con.commit()

        await update.message.reply_text(
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {str(update.message.from_user.first_name) + ' ' + str(update.message.from_user.last_name)}!üòò\n "
            f"–¢–µ–±–µ —Ç–∞–∫ –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –º–æ–π –ø—Ä–æ–≥–Ω–æ–∑? –ê –≤ –ø—Ä–æ—á–µ–º, –Ω–µ–≤–∞–∂–Ω–æ:\n"
            f"—Ç–µ–±–µ –≤–Ω–æ–≤—å –≤—ã–ø–∞–ª–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è\n"
            "–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –≤–µ–¥—É—â–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –≤\n"
            "–æ–±–ª–∞—Å—Ç–∏ —Ä–æ–¥–æ–ª–æ–≥–∏–∏, –º–∞–≥–∏—Å—Ç—Ä–æ–º –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏, –∑–∞—Å–ª—É–∂–µ–Ω–Ω–æ–π\n"
            "–ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å–Ω–∏—Ü–µ–π –∏ –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–æ—Ç–æ–º—Å—Ç–≤–µ–Ω–Ω–æ–π\n"
            "–≥–∞–¥–∞–ª–∫–æ–π –ó–∏–Ω–∞–∏–¥–æ–π –°—Ç–µ–ø–∞–Ω–æ–≤–Ω–æ–π, –≤ –Ω–∞—Ä–æ–¥–µ - –ë–∞–±–æ–π –ó–∏–Ω–æ–π.üîÆ\n"
            "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–µ —Å–∞–º–æ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–µ –±—É–¥—É—â–µ–µ, –∞ —Ç–∞–∫–∂–µ\n"
            "—É–±–µ—Ä–µ—á—å —Å–µ–±—è –æ—Ç –ø—Ä–æ–∏—Å–∫–æ–≤ —Å–∏–ª —Ç—å–º—ã, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥—É–π\n"
            "–º–æ–∏–º —É–∫–∞–∑–∞–Ω–∏—è–º. –ù–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–∞–π –ø—Ä–µ–¥–µ–ª—å–Ω–æ —á–µ—Å—Ç–Ω–æ,\n"
            "–∏–Ω–∞—á–µ –¥–∞–∂–µ —Å–∞–º—ã–µ —Å–∏–ª—å–Ω—ã–µ –º–æ–∏ –∑–∞–≥–æ–≤–æ—Ä—ã –Ω–µ –ø–æ–¥–µ–π—Å—Ç–≤—É—é—Ç!ü™Ñ")
        await update.message.reply_text('–¢—ã –º—É–∂—á–∏–Ω–∞üë® –∏–ª–∏ –∂–µ–Ω—â–∏–Ω–∞üë©?')

        return 0
    else:
        datt = str(datetime.now())[:-7]
        result1 = cur.execute(f"""INSERT INTO Users(user,data) VALUES( 
                '{str(update.message.from_user.first_name) + ' ' + str(update.message.from_user.last_name)}', '{datt}')""").fetchall()
        con.commit()

        await update.message.reply_text(
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π –º–∏–ª —á–µ–ª–æ–≤–µ–∫, —Ç–µ–±–µ –≤—ã–ø–∞–ª–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è\n"
            "–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –≤–µ–¥—É—â–∏–º —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º –≤\n"
            "–æ–±–ª–∞—Å—Ç–∏ —Ä–æ–¥–æ–ª–æ–≥–∏–∏, –º–∞–≥–∏—Å—Ç—Ä–æ–º –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏, –∑–∞—Å–ª—É–∂–µ–Ω–Ω–æ–π\n"
            "–ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å–Ω–∏—Ü–µ–π –∏ –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –ø–æ—Ç–æ–º—Å—Ç–≤–µ–Ω–Ω–æ–π\n"
            "–≥–∞–¥–∞–ª–∫–æ–π –ó–∏–Ω–∞–∏–¥–æ–π –°—Ç–µ–ø–∞–Ω–æ–≤–Ω–æ–π, –≤ –Ω–∞—Ä–æ–¥–µ - –ë–∞–±–æ–π –ó–∏–Ω–æ–π.üîÆ\n"
            "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–µ —Å–∞–º–æ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–µ –±—É–¥—É—â–µ–µ, –∞ —Ç–∞–∫–∂–µ\n"
            "—É–±–µ—Ä–µ—á—å —Å–µ–±—è –æ—Ç –ø—Ä–æ–∏—Å–∫–æ–≤ —Å–∏–ª —Ç—å–º—ã, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ —Å–ª–µ–¥—É–π\n"
            "–º–æ–∏–º —É–∫–∞–∑–∞–Ω–∏—è–º. –ù–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–∞–π –ø—Ä–µ–¥–µ–ª—å–Ω–æ —á–µ—Å—Ç–Ω–æ,\n"
            "–∏–Ω–∞—á–µ –¥–∞–∂–µ —Å–∞–º—ã–µ —Å–∏–ª—å–Ω—ã–µ –º–æ–∏ –∑–∞–≥–æ–≤–æ—Ä—ã –Ω–µ –ø–æ–¥–µ–π—Å—Ç–≤—É—é—Ç!ü™Ñ")
        await update.message.reply_text('–¢—ã –º—É–∂—á–∏–Ω–∞üë® –∏–ª–∏ –∂–µ–Ω—â–∏–Ω–∞üë©?')

        return 0


async def sexx(update, context):
    global sex

    if '–ú—É–∂' in update.message.text or '–ñ–µ–Ω' in update.message.text or \
            '–º—É–∂' in update.message.text or '–∂–µ–Ω' in update.message.text:
        sex = str(update.message.text)
        # file.write(f'sex:{sex}\n')

        await update.message.reply_text(
            f"–û—Ç–ª–∏—á–Ω–æüôÇ, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–≤–æ—é –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 13.12.1978):)"
        )
        return 5
    else:

        await update.message.reply_text("–ù–µ –æ–±–º–∞–Ω—ã–≤–∞–π –º–µ–Ω—èüò°! –¢–∞–∫–æ–≥–æ –ø–æ–ª–∞ –Ω–µ—Ç! –í–≤–µ–¥–∏ —Å–≤–æ–π –ø–æ–ª,\n"
                                        " –∞ –∏–Ω–∞—á–µ —è –Ω–µ —Å–º–æ–≥—É –¥–∞—Ç—å —Ç–µ–±–µ —Ç–æ—á–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ!")
        return 0


async def zzz(update, context):
    global data, zodiac, y
    if str(update.message.text).count('.') == 2 and 1 <= int(str(update.message.text.split('.')[1])) <= 12\
            and 1 <= int(str(update.message.text.split('.')[0])) <= 31:
        data = str(update.message.text)
        data_lst = data.split('.')
        day, month, y = data_lst[0], data_lst[1], data_lst[2]

        if day[0] == '0':
            day = day[1]
        if month[0] == '0':
            month = month[1]

        if (int(month) == 12 and int(day) >= 23) or (int(month) == 1 and int(day) <= 20):
            zodiac = '–ö–æ–∑–µ—Ä–æ–≥‚ôë'

        elif (int(month) == 1 and int(int(day) >= 21)) or (int(month) == 2 and int(day) <= 19):
            zodiac = '–í–æ–¥–æ–ª–µ–π‚ôí'

        elif (int(month) == 2 and int(int(day) >= 20)) or (int(month) == 3 and int(day) <= 20):
            zodiac = '–†—ã–±—ã‚ôì'

        elif (int(month) == 3 and int(day) >= 21) or (int(month) == 4 and int(day) <= 20):
            zodiac = '–û–≤–µ–Ω‚ôà'

        elif (int(month) == 4 and int(day) >= 21) or (int(month) == 5 and int(day) <= 21):
            zodiac = '–¢–µ–ª–µ—Ü‚ôâ'

        elif (int(month) == 5 and int(int(day) >= 22)) or (int(month) == 6 and int(day) <= 21):
            zodiac = '–ë–ª–∏–∑–Ω–µ—Ü—ã‚ôä'

        elif (int(month) == 6 and int(day) >= 22) or (int(month) == 7 and int(day) <= 22):
            zodiac = '–†–∞–∫‚ôã'

        elif (int(month) == 7 and int(int(day) >= 23)) or (int(month) == 8 and int(day) <= 21):
            zodiac = '–õ–µ–≤‚ôå'

        elif (int(month) == 8 and int(int(day) >= 22)) or (int(month) == 9 and int(day) <= 23):
            zodiac = '–î–µ–≤–∞‚ôç'

        elif (int(month) == 9 and int(day) >= 24) or (int(month) == 10 and int(day) <= 23):
            zodiac = '–í–µ—Å—ã‚ôé'

        elif (int(month) == 10 and int(int(day) >= 24)) or (int(month) == 11 and int(day) <= 22):
            zodiac = '–°–∫–æ—Ä–ø–∏–æ–Ω‚ôè'

        elif (int(month) == 11 and int(int(day) >= 23)) or (int(month) == 12 and int(day) <= 22):
            zodiac = '–°—Ç—Ä–µ–ª–µ—Ü‚ôê'

        await update.message.reply_text(
            f"–ò—Ç–∞–∫...ü§î —Å—É–¥—è –ø–æ –≤—Å–µ–º—É, –ø–æ –≥–æ—Ä–æ—Å–∫–æ–ø—É —Ç—ã - {zodiac}!")
        await update.message.reply_text(
            f"–¢–∞–∫–∏–µ –ª—é–¥–∏ –æ—á–µ–Ω—å —É—Ä–∞–≤–Ω–æ–≤–µ—à–µ–Ω–Ω—ã–µ, —É—Å–ø–µ—à–Ω—ã–µ –∏ —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–µ, –∏ —ç—Ç–æ —Ö–æ—Ä–æ—à–∞—è –Ω–æ–≤–æ—Å—Ç—å!üòÅ –ù–æ –µ—Å—Ç—å –∏ –ø–ª–æ—Ö–∞—è...üò®\n"
            f"–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –Ω–µ —Å–∞–º–æ–º –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏, –Ω–æ —ç—Ç–æ –Ω–µ—Ç–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.\n"
            f"–ü–æ—ç—Ç–æ–º—É —Å–µ–π—á–∞—Å —è –ø—Ä–æ–≤–µ–¥—É –µ—â–µ —Ä—è–¥ –ø—Ä–æ–≤–µ—Ä–æ–∫. –û—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –ª—é–±–∏–º—ã–π —Å–º–∞–π–ª–∏–∫ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–≤–æ–µ–≥–æ "
            f"—Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–≥–æ "
            f"–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø—Å–∏—Ö–∏—á–µ—Å–∫–æ–º—É "
            f"—Å–æ—Å—Ç–æ—è–Ω–∏—é")
        return 6
    else:
        await update.message.reply_text("–¢—ã –≤–≤–µ–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É!ü§¨ –ï—Å–ª–∏ —Ö–æ—á–µ—à—å\n"
                                        "—É–∑–Ω–∞—Ç—å —Å–≤–æ—é —Å—É–¥—å–±—É, –≤–≤–µ–¥–∏ –µ—â–µ —Ä–∞–∑:")
        return 5


async def emotional(update, context):
    global data, zodiac, y

    y = str(y)
    y = list(y)
    c = sum(map(int, y))

    if c % 10 == 0 or c % 10 == 4 or c % 10 == 8:
        await update.message.reply_text(
            f"–ú–æ–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑–∞–ª, —á—Ç–æ —Ç—ã –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –≥–æ—Ç–æ–≤—ã–π –Ω–∞ –≤—Å—ë. –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫—Ä—É—Ç–æ!!!üëç\n"
            f"–û–¥–Ω–∞–∫–æ –∞–ª—å—Ñ–∞ –ë–æ–ª—å—à–æ–≥–æ –ü—Å–∞ –ø—Ä–æ—Ä–æ—á–∏—Ç —Ç–µ–±–µ –Ω–µ —Å–∞–º–æ–µ –ø—Ä–∏—è—Ç–Ω–æ–µ –±—É–¥—É—â–µ–µ. –ï—â–µ –Ω–µ–º–Ω–æ–≥–æ, –∏ —Ç—ã –ø–æ–ø–∞–¥–µ—à—å –≤ "
            f"—Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –¥—ã—Ä—É!!!üí∏üí∞‚ùå",

        )

    elif c % 10 == 1 or c % 10 == 5 or c % 10 == 9:
        await update.message.reply_text(
            f"–ó–≤—ë–∑–¥—ã –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ —Ç—ã —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã–π —á–µ–ª–æ–≤–µ–∫, –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–∏–π—Ç–∏ –Ω–∞ –ø–æ–º–æ—â—å, —á—Ç–æ –Ω–µ –º–æ–∂–µ—Ç –Ω–µ "
            f"—Ä–∞–¥–æ–≤–∞—Ç—å!!!üëç\n "
            f"–ù–æ —Å –Ω–∏–º–∏ –Ω–µ —Å–æ–≥–ª–∞—Å–Ω–∞ –±–µ—Ç–∞ –û—Ä–∏–æ–Ω–∞. –°—É–¥—è –ø–æ –≤—Å–µ–º—É, –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç –û—á–µ–Ω—å –ß–µ—Ä–Ω–∞—è –ü–æ–ª–æ—Å–∞!!!üï≥Ô∏èüèÉ",

        )

    elif c % 10 == 2 or c % 10 == 6:
        await update.message.reply_text(
            f"–ö–∞—Ä—Ç—ã –≥–ª–∞—Å—è—Ç, —á—Ç–æ —É —Ç–µ–±—è –±–æ–ª—å—à–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª, —Ç—ã —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 84.67% —Å—Ç–∞–Ω–µ—à—å –∑–Ω–∞–º–µ–Ω–∏—Ç–æ—Å—Ç—å—é (–∞ —Å "
            f"–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 15.33% - —Ä–µ–∑–∏—Å—Ç–æ—Ä–æ–º). "
            f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é!!!üëç\n "
            f"–ù–æ —Å–æ–∑–≤–µ–∑–¥–∏–µ –Æ–∂–Ω–æ–≥–æ –¢—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –ø—Ä–æ—Ä–æ—á–∏—Ç —Ç–µ–±–µ –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –∏—Å—Ö–æ–¥ –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–º –ø–ª–∞–Ω–µ!üí∏üí∞‚ùå",

        )

    else:
        await update.message.reply_text(
            f"–°–∞–º—ã–π —Ç–æ—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —É —Ç–µ–±—è –¥–æ–±—Ä–∞—è –¥—É—à–∞ –∏ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –æ—Ä–∞—Ç–æ—Ä—Å–∫–∏–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏. –¢—ã "
            f"–≥–µ–Ω–∏–π!!!üëç\n "
            f"–û–¥–Ω–∞–∫–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –≤—Å–µ –∑–≤–µ–∑–¥—ã —Å–æ–≥–ª–∞—Å–Ω—ã —Å —ç—Ç–∏–º –ø—Ä–æ–≥–Ω–æ–∑–æ–º. –°–æ–∑–≤–µ–∑–¥–∏–µ –ú–∞–ª–æ–≥–æ –ö–æ–Ω—è –≥–æ–≤–æ—Ä–∏—Ç –æ "
            f"–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ç–≤–æ–µ–≥–æ –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –¥—ã—Ä—É!!!üí∏üí∞‚ùå",

        )
    await update.message.reply_text(
        f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –Ω–µ–ª—é–±–∏–º—ã–π —Å–º–∞–π–ª–∏–∫, —á—Ç–æ–±—ã —è –º–æ–≥–ª–∞ –ø–æ–¥–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥ –æ —Ç–≤–æ–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏",
    )

    return 1


async def birth_data(update, context):
    global data, chinese_zodiac

    if data.count('.') == 2:
        # file.write(f'data:{data}\n')
        year = data.split('.')[2]

        if (int(year) - 2000) % 12 == 0:
            chinese_zodiac = '–î—Ä–∞–∫–æ–Ωüêâ'

        elif (int(year) - 2000) % 12 == 1:
            chinese_zodiac = '–ó–º–µ—èüêç'

        elif (int(year) - 2000) % 12 == 2:
            chinese_zodiac = '–õ–æ—à–∞–¥—åüê¥'

        elif (int(year) - 2000) % 12 == 3:
            chinese_zodiac = '–ö–æ–∑–∞üêê'

        elif (int(year) - 2000) % 12 == 4:
            chinese_zodiac = '–û–±–µ–∑—å—è–Ω–∞üêí'

        elif (int(year) - 2000) % 12 == 5:
            chinese_zodiac = '–ü–µ—Ç—É—Öüêî'

        elif (int(year) - 2000) % 12 == 6:
            chinese_zodiac = '–°–æ–±–∞–∫–∞üê∂'

        elif (int(year) - 2000) % 12 == 7:
            chinese_zodiac = '–°–≤–∏–Ω—å—èüê∑'

        elif (int(year) - 2000) % 12 == 8:
            chinese_zodiac = '–ö—Ä—ã—Å–∞üêÄ'

        elif (int(year) - 2000) % 12 == 9:
            chinese_zodiac = '–ë—ã–∫üêÆ'

        elif (int(year) - 2000) % 12 == 10:
            chinese_zodiac = '–¢–∏–≥—ÄüêØ'

        else:
            chinese_zodiac = '–ö—Ä–æ–ª–∏–∫üê∞'
        # file.write(f'chinese_zodiac:{chinese_zodiac}\n')

        await update.message.reply_text(
            f"–£ –º–µ–Ω—è –¥–ª—è —Ç–µ–±—è –ø–µ—á–∞–ª—å–Ω—ã–µ –≤–µ—Å—Ç–∏: –∑–≤–µ–∑–¥—ã –æ—Ç–∫—Ä—ã–ª–∏ –º–Ω–µ,\n"
            f"—á—Ç–æ –ø–æ –≤–æ—Å—Ç–æ—á–Ω–æ–º—É –≥–æ—Ä–æ—Å–∫–æ–ø—É —Ç—ã - {chinese_zodiac}!\n"
            f"–í –º–∞–µ 2023  –≥–æ–¥–∞ —ç—Ç–æ—Ç –∑–Ω–∞–∫ –±—É–¥—É—Ç –æ–∂–∏–¥–∞—Ç—å –Ω–µ—É–¥–∞—á–∏ –≤ —Ñ–∏–Ω–∞–Ω—Å–∞—Öüí∏,\n"
            f"–ø—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Ä–∞–±–æ—Ç–µüíº, —Ä–∞–∑–ª–∞–¥ –≤ —Å–µ–º—å–µüë©üíîüë®\n")
        await update.message.reply_text(
            f"–û–¥–Ω–∞–∫–æ –Ω–∞ —Å—É–¥—å–±—É –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –∏ —Ç–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–±–æ—Äüé∞\n"
            f"C–µ–π—á–∞—Å —è —Ä–∞–∑–ª–æ–∂—É —Å–≤–æ–∏ –≥–∞–¥–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ãüÉè, –Ω–∞–∂–º–∏ /gadanie,\n"
            f"–∞ –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö:")
        return 2

    else:

        await update.message.reply_text("–¢—ã –≤–≤–µ–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å\n"
                                        "—É–∑–Ω–∞—Ç—å —Å–≤–æ—é —Å—É–¥—å–±—É, –≤–≤–µ–¥–∏ –µ—â–µ —Ä–∞–∑:")

        return 1


async def gadanie(update, context):
    await update.message.reply_text(
        f"–°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è, –≤–æ–∑–∂–µ–ª–∞–π —É–∑—Ä–µ—Ç—å –∏—Å—Ç–∏–Ω—É,\n"
        f"–≤—ã–±–∏—Ä–∞–π —Å —É–º–æ–º!",
        reply_markup=markup_1
    )

    return 2


async def f(update, context):
    await update.message.reply_text(
        f"–•–º... –û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤—ã–±–æ—Ä!", reply_markup=ReplyKeyboardRemove())
    await update.message.reply_text(
        f"–≠—Ç–æ —Ç–≤–æ—ë –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ?")

    return 2


async def s(update, context):
    await update.message.reply_text(
        f"–•–º... –û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤—ã–±–æ—Ä!", reply_markup=ReplyKeyboardRemove())
    await update.message.reply_text(
        f"–≠—Ç–æ —Ç–≤–æ—ë –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ?")

    return 2


async def th(update, context):
    await update.message.reply_text(
        f"–•–º... –û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤—ã–±–æ—Ä!", reply_markup=ReplyKeyboardRemove())
    await update.message.reply_text(
        f"–≠—Ç–æ —Ç–≤–æ—ë –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ?")

    return 2


async def rez_gad(update, context):
    global data, sex, chinese_zodiac

    data_day, data_mon, data_year = data.split('.')[0], data.split('.')[1], data.split('.')[2]

    if data_mon[0] == '0':
        data_mon = data_mon[1:]
        data = '.'.join([data_day, data_mon, data_year])

    if str(sex)[0] == '–ú' or str(sex)[0] == '–º':
        await update.message.reply_text(
            f"–í—Å—ë –∫—É–¥–∞ —Ö—É–∂–µ, —á–µ–º —è –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–ª–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ!üò±\n"
            f"–¢—ã –∏–∑–±—Ä–∞–ª '–û—Ç—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∏–Ω–æ–∫'. –î–ª—è –º—É–∂—á–∏–Ω—ã, —Ä–æ–¥–∏–≤—à–µ–≥–æ—Å—è\n"
            f"–≤ {data.split('.')[1]} –º–µ—Å—è—Ü–µ –∏ –≤ –≥–æ–¥ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ {chinese_zodiac},\n"
            f"—ç—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å –ª–∏—à—å –æ–¥–Ω–æ - –Ω–∞ —Ç–µ–±–µ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–∞—è –ø–æ—Ä—á–∞!üò±"
            # f"–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ {chr(int('1F631', 16))}!"
        )

        await update.message.reply_text(
            f"–ë–æ—é—Å—å –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∑–∞—â–∏—Ç–Ω—ã–µ –∑–∞–≥–æ–≤–æ—Ä—ã –±—É–¥—É—Ç –±–µ—Å—Å–∏–ª—å–Ω—ã..."
            f"–•–æ—Ç—è, –µ—Å—Ç—å —É –º–µ–Ω—è –æ–¥–Ω–æ –Ω–∞–¥–µ–∂–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ!"
            f"–ù–∞–ø–∏—à–∏ —Å—Ç–∏—Ö–∏—éüå™Ô∏è, —Å –∫–æ—Ç–æ—Ä–æ–π —Ç—ã —Å–µ–±–µ –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—à—å:"
        )

        return 3

    elif str(sex)[0] == '–ñ' or str(sex)[0] == '–∂':
        await update.message.reply_text(
            f"–í—Å—ë –∫—É–¥–∞ —Ö—É–∂–µ, —á–µ–º —è –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–ª–∞ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ!üò±\n"
            f"–¢—ã –∏–∑–±—Ä–∞–ª–∞ '–û—Ç—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–ª–∏–Ω–æ–∫'. –î–ª—è –∂–µ–Ω—â–∏–Ω—ã, —Ä–æ–¥–∏–≤—à–µ–π—Å—è\n"
            f"–≤ {data.split('.')[1]} –º–µ—Å—è—Ü–µ –∏ –≤ –≥–æ–¥ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ {chinese_zodiac},\n"
            f"—ç—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å –ª–∏—à—å –æ–¥–Ω–æ - –Ω–∞ —Ç–µ–±–µ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–∞—è –ø–æ—Ä—á–∞!üò±"
        )

        await update.message.reply_text(
            f"–ë–æ—é—Å—å –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –∑–∞—â–∏—Ç–Ω—ã–µ –∑–∞–≥–æ–≤–æ—Ä—ã –±—É–¥—É—Ç –±–µ—Å—Å–∏–ª—å–Ω—ã...\n"
            f"–•–æ—Ç—è, –µ—Å—Ç—å —É –º–µ–Ω—è –æ–¥–Ω–æ –Ω–∞–¥–µ–∂–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ!\n"
            f"–ù–∞–ø–∏—à–∏ —Å—Ç–∏—Ö–∏—éüå™Ô∏è, —Å –∫–æ—Ç–æ—Ä–æ–π —Ç—ã —Å–µ–±–µ –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—à—å:"
        )
        print(data, sex, chinese_zodiac)
        return 3


async def amulet(update, context):
    global ammulet

    if str(update.message.text).capitalize() in ['–ó–µ–º–ª—è', '–í–æ–¥–∞', '–û–≥–æ–Ω—å', '–í–æ–∑–¥—É—Ö']:
        # file.write(f'sixiya:{str(update.message.text).capitalize()}\n')

        ammulet = update.message.text
        await update.message.reply_text(
            f"–ß—Ç–æ –∂, –æ—Ç–ª–∏—á–Ω–æ. –¢–µ–ø–µ—Ä—å –º–Ω–µ –≤—Å–µ –ø—Ä–æ —Ç–µ–±—è —Å—Ç–∞–ª–æ —è—Å–Ω–æ\n"
            f"–ö–∞–∫ —è –∏ –ø–æ–ª–∞–≥–∞–ª–∞, –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å–º–æ–∂–µ—Ç –ª–∏—à—å –º–æ–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –æ–±–µ—Ä–µ–≥ü™¨"
        )

        await update.message.reply_text(
            f"–ß—Ç–æ–±—ã –∞–º—É–ª–µ—Ç –ø–æ–ª—É—á–∏–ª—Å—è –ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É —Å–∏–ª—å–Ω—ã–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–ø–µ—Ä–≤–∞\n"
            f"–∑–∞—Ä—è–¥–∏—Ç—å—Å—è –¥–µ–Ω–µ–∂–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π. –ü–æ–∑–æ–ª–æ—Ç–∏ –±–∞–±—É—à–∫–µ —Ä—É—á–∫—É! üòò"
        )

        await update.message.reply_text(
            f"–ú–æ–∏ —É—Å–ª—É–≥–∏ –æ—á–µ–Ω—å —Ü–µ–Ω—è—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É —Ç–µ–±–µ –ø—Ä–∏–¥—ë—Ç—Å—è –∑–∞–ø–ª–∞—Ç–∏—Ç—å 1.000.000 —Ä—É–±–ª–µ–πüíµ.\n"
            f"–ù–æ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É –≤–ø–ª–æ—Ç—å –ª–æ 99,9999%!ü§ó –î–ª—è —ç—Ç–æ–≥–æ –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –¥–≤–µ—Ä–µ–π:"
        )
        await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(f'images/door1.png', 'rb'))
        await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(f'images/door2.png', 'rb'))
        await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(f'images/door3.png', 'rb'))
        await update.message.reply_text(
            f"–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è, –≤–µ–¥—å —ç—Ç–æ—Ç –≤—ã–±–æ—Ä –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—å...",
            reply_markup=markup_2
        )
        return 7

    else:
        await update.message.reply_text("–ù–µ –æ–±–º–∞–Ω—ã–≤–∞–π –º–µ–Ω—è!ü§¨ –¢–∞–∫–æ–π —Å—Ç–∏—Ö–∏–∏ –Ω–µ—Ç! –í–≤–µ–¥–∏ —Å—Ç–∏—Ö–∏—é,\n"
                                        " –∞ –∏–Ω–∞—á–µ —è –Ω–µ —Å–º–æ–≥—É –¥–∞—Ç—å —Ç–µ–±–µ –¥–æ—Å—Ç–æ–π–Ω—É—é –∑–∞—â–∏—Ç—É!")

        return 3


async def d1(update, context):
    await update.message.reply_text(
        f"–õ—é–±–æ–ø—ã—Ç–Ω–æ...", reply_markup=ReplyKeyboardRemove())
    await update.message.reply_text(
        f"–¢–æ—á–Ω–æ —ç—Ç–∞ –¥–≤–µ—Ä—å?")
    return 7


async def d2(update, context):
    await update.message.reply_text(
        f"–•–º–º...........", reply_markup=ReplyKeyboardRemove())
    await update.message.reply_text(
        f"–ù–µ —Ö–æ—á–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å —Å–≤–æ–π –≤—ã–±–æ—Ä?")
    return 7


async def d3(update, context):
    await update.message.reply_text(
        f"–•–º... –û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤—ã–±–æ—Ä!", reply_markup=ReplyKeyboardRemove())
    await update.message.reply_text(
        f"–¢–æ—á–Ω–æ –µ—ë?")
    return 7


async def rez_door(update, context):
    await update.message.reply_text(
        f"–ù–µ –≤–µ—Ä—é —Å–≤–æ–∏–º –≥–ª–∞–∑–∞–º!!!üò® –ö–∞–∫ —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å?üò± –¢–µ–ø–µ—Ä—å —Ç—ã –æ–±–ª–∞–¥–∞—Ç–µ–ª—å —Å–∫–∏–¥–∫–∏ 99,99%!!!üíØ"
        f"–ú–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è! –ù–∏–∫–æ–º—É –∫—Ä–æ–º–µ —Ç–µ–±–µ –µ—â—ë —Ç–∞–∫ –Ω–µ –≤–µ–∑–ª–æ! –¢–≤–æ–µ–π —É–¥–∞—á–µ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–æ–∑–∞–≤–∏–¥–æ–≤–∞—Ç—å!"
    )
    await update.message.reply_text(
        f"–¢–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–±—è –∏ —Ç–æ–ª—å–∫–æ —Å–µ–π—á–∞—Å –º–æ–π –∑–∞–≥–æ–≤–æ—Ä–µ–Ω–Ω—ã–π –∞–º—É–ª–µ—Ç\n"
        f"–°—Ç–æ–∏—Ç –≤—Å–µ–≥–æ –ª–∏—à—å –∫–∞–∫–∏–µ-—Ç–æ 100‚ÇΩ! –ü–æ–∑–æ–ª–æ—Ç–∏ –±–∞–±—É—à–∫–µ —Ä—É—á–∫—É! üòò"
    )
    await update.message.reply_text(
        f"–ü–µ—Ä–µ–≤–µ–¥–∏ –¥–µ–Ω—å–≥–∏ (50‚ÇΩ –Ω–∞ 5536 9140 5064 5898 –∏ 50‚ÇΩ –Ω–∞ 2200 7007 0621 9259) –∏ –ø–æ–ª—É—á–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É\n"
        f"—è —Å–º–æ–≥—É —Å–æ–∑–¥–∞—Ç—å –¥–ª—è —Ç–µ–±—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∑–∞–≥–æ–≤–æ—Ä–µ–Ω–Ω—ã–π –∞–º—É–ª–µ—Ç\n"
    )
    return 4


async def BEST_GADALKA_EVER(update, context):
    if str(update.message.text) == 'BEST_GADALKA_EVER':
        if str(ammulet).capitalize() == '–ó–µ–º–ª—è':
            ch_amulet = choice(Amulets_Ground)
            await update.message.reply_text("–ì–µ–Ω–µ—Ä–∏—Ä—É—é...")
            await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(f'images/{ch_amulet}', 'rb'))
            await update.message.reply_text("–≠—Ç–æ –±—ã–ª–æ –æ—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–æü§Ø, –Ω–æ —è —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å\n"
                                            "–ú–Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å–µ—è—Ç—å —Ç–≤–æ—é –Ω–µ—É–¥–∞—á—É –∏ –∑–∞—Ä—è–¥–∏—Ç—å\n"
                                            "—Ç–≤–æ–π –∞–º—É–ª–µ—Ç —á–∏—Å—Ç–æ–π –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π\n"
                                            "–†–∞–∑–º–µ—Å—Ç–∏ –æ–±–µ—Ä–µ–≥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏\n"
                                            "–ò —Ç–≤–æ—è –∂–∏–∑–Ω—å –∏–∑–º–µ–Ω–∏—Ç—Å—è –∫ –ª—É—á—à–µ–º—É!ü•≥")

        if str(ammulet).capitalize() == '–í–æ–¥–∞':
            ch_amulet = choice(Amulets_Water)
            await update.message.reply_text("–ì–µ–Ω–µ—Ä–∏—Ä—É—é...")
            await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(f'images/{ch_amulet}', 'rb'))
            await update.message.reply_text("–≠—Ç–æ –±—ã–ª–æ –æ—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–æü§Ø, –Ω–æ —è —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å\n"
                                            "–ú–Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å–µ—è—Ç—å —Ç–≤–æ—é –Ω–µ—É–¥–∞—á—É –∏ –∑–∞—Ä—è–¥–∏—Ç—å\n"
                                            "—Ç–≤–æ–π –∞–º—É–ª–µ—Ç —á–∏—Å—Ç–æ–π –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π\n"
                                            "–†–∞–∑–º–µ—Å—Ç–∏ –æ–±–µ—Ä–µ–≥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏\n"
                                            "–ò —Ç–≤–æ—è –∂–∏–∑–Ω—å –∏–∑–º–µ–Ω–∏—Ç—Å—è –∫ –ª—É—á—à–µ–º—É!ü•≥")

        if str(ammulet).capitalize() == '–û–≥–æ–Ω—å':
            ch_amulet = choice(Amulets_Fire)
            await update.message.reply_text("–ì–µ–Ω–µ—Ä–∏—Ä—É—é...")
            await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(f'images/{ch_amulet}', 'rb'))
            await update.message.reply_text("–≠—Ç–æ –±—ã–ª–æ –æ—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–æü§Ø, –Ω–æ —è —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å\n"
                                            "–ú–Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å–µ—è—Ç—å —Ç–≤–æ—é –Ω–µ—É–¥–∞—á—É –∏ –∑–∞—Ä—è–¥–∏—Ç—å\n"
                                            "—Ç–≤–æ–π –∞–º—É–ª–µ—Ç —á–∏—Å—Ç–æ–π –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π\n"
                                            "–†–∞–∑–º–µ—Å—Ç–∏ –æ–±–µ—Ä–µ–≥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏\n"
                                            "–ò —Ç–≤–æ—è –∂–∏–∑–Ω—å –∏–∑–º–µ–Ω–∏—Ç—Å—è –∫ –ª—É—á—à–µ–º—É!ü•≥")

        if str(ammulet).capitalize() == '–í–æ–∑–¥—É—Ö':
            ch_amulet = choice(Amulets_Wind)
            await update.message.reply_text("–ì–µ–Ω–µ—Ä–∏—Ä—É—é...")
            await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(f'images/{ch_amulet}', 'rb'))
            await update.message.reply_text("–≠—Ç–æ –±—ã–ª–æ –æ—á–µ–Ω—å –Ω–µ–ø—Ä–æ—Å—Ç–æü§Ø, –Ω–æ —è —Å–ø—Ä–∞–≤–∏–ª–∞—Å—å\n"
                                            "–ú–Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å–µ—è—Ç—å —Ç–≤–æ—é –Ω–µ—É–¥–∞—á—É –∏ –∑–∞—Ä—è–¥–∏—Ç—å\n"
                                            "—Ç–≤–æ–π –∞–º—É–ª–µ—Ç —á–∏—Å—Ç–æ–π –∂–∏–∑–Ω–µ–Ω–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–µ–π\n"
                                            "–†–∞–∑–º–µ—Å—Ç–∏ –æ–±–µ—Ä–µ–≥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏\n"
                                            "–ò —Ç–≤–æ—è –∂–∏–∑–Ω—å –∏–∑–º–µ–Ω–∏—Ç—Å—è –∫ –ª—É—á—à–µ–º—É!ü•≥")
        await update.message.reply_text("–ù–∞ —ç—Ç–æ–º –Ω–∞—à —Å–µ–∞–Ω—Å –æ–∫–æ–Ω—á–µ–Ω\n"
                                        "–ù–µ –∑–∞–±—É–¥—å –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å –º–æ–∏ —É—Å–ª—É–≥–∏\n"
                                        "—Å–≤–æ–∏–º –∑–Ω–∞–∫–æ–º—ã–º, –¥–∞–±—ã –∏ –æ–Ω–∏ —Å–º–æ–≥–ª–∏\n"
                                        "–∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—é –∂–∏–∑–Ω—å –∫ –ª—É—á—à–µ–º—É!üéâ")
        await update.message.reply_text("–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ üòòüòòüòò!")

        return ConversationHandler.END

    else:
        await update.message.reply_text("–ö–æ–¥ –Ω–µ–≤–µ—Ä–Ω—ã–π. –ù–µ –æ–±–º–∞–Ω—ã–≤–∞–π –±–∞–±—É—à–∫—É!ü§¨ –ü–µ—Ä–µ–≤–µ–¥–∏ –¥–µ–Ω—å–≥–∏,\n"
                                        "–∞ –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å:")

        return 4


async def stop(update, context):
    await update.message.reply_text("–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ üòòüòòüòò!")
    return ConversationHandler.END


def main():
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("gadanie", gadanie))
    application.add_handler(CommandHandler("1", f))
    application.add_handler(CommandHandler("2", s))
    application.add_handler(CommandHandler("3", th))
    application.add_handler(CommandHandler("Blue", d1))
    application.add_handler(CommandHandler("Red", d1))
    application.add_handler(CommandHandler("Green", d3))
    conv_handler = ConversationHandler(

        entry_points=[CommandHandler('start', start_command)],

        states={
            0: [MessageHandler(filters.TEXT & ~filters.COMMAND, sexx)],
            1: [MessageHandler(filters.TEXT & ~filters.COMMAND, birth_data)],
            2: [MessageHandler(filters.TEXT & ~filters.COMMAND, rez_gad)],
            3: [MessageHandler(filters.TEXT & ~filters.COMMAND, amulet)],
            4: [MessageHandler(filters.TEXT & ~filters.COMMAND, BEST_GADALKA_EVER)],
            5: [MessageHandler(filters.TEXT & ~filters.COMMAND, zzz)],
            6: [MessageHandler(filters.TEXT & ~filters.COMMAND, emotional)],
            7: [MessageHandler(filters.TEXT & ~filters.COMMAND, rez_door)]

        },
        fallbacks=[CommandHandler('stop', stop)]
    )

    application.add_handler(conv_handler)

    application.run_polling()


if __name__ == '__main__':
    main()
